{"ast":null,"code":"var _jsxFileName = \"/home/uri/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/Ex2/Chat-Application/src/Chat.js\",\n  _s = $RefreshSig$();\nimport './Chat.css';\nimport LeftBar from './ChatScreen/LeftBar.js';\nimport ContactsBar from './ChatScreen/ContactsBar.js';\nimport ChatBox from './ChatScreen/ChatBox.js';\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    users,\n    curUser,\n    chats,\n    setChats\n  } = _ref;\n  const [curChat, setCurChat] = useState(null);\n  const [selectedContact, setselectedContact] = useState(null);\n  const navigate = useNavigate();\n  const handleContactSelect = chat => {\n    findChat(chats, chat.id);\n    setselectedContact(contact);\n  };\n  const handleAddChat = newChat => {\n    setChats(prevChats => [...prevChats, newChat]);\n  };\n  const updateChatMessages = (chatId, updatedMessages) => {\n    setChats(prevChats => prevChats.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: updatedMessages\n        };\n      }\n      return chat;\n    }));\n  };\n  function findChat(chats, otherUser) {\n    for (const chat of chats) {\n      let user = chat.users[0];\n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n      user = chat.users[1];\n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n    }\n  }\n  function handleLogOut(event) {\n    event.preventDefault();\n    navigate('/login');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LeftBar, {\n      user: curUser,\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsBar, {\n      users: users,\n      user: curUser,\n      chats: chats,\n      onChatSelect: handleContactSelect,\n      onAddChat: handleAddChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chat: curChat,\n      selectedContact: selectedContact,\n      setChat: setCurChat,\n      updateChatMessages: updateChatMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"/AheU1nD+i4RQtpE0bmD3qBlcAg=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["LeftBar","ContactsBar","ChatBox","React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","users","curUser","chats","setChats","curChat","setCurChat","selectedContact","setselectedContact","navigate","handleContactSelect","chat","findChat","id","contact","handleAddChat","newChat","prevChats","updateChatMessages","chatId","updatedMessages","map","messages","otherUser","user","username","handleLogOut","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onChatSelect","onAddChat","setChat","_c","$RefreshReg$"],"sources":["/home/uri/שולחן העבודה/Ex2/Chat-Application/src/Chat.js"],"sourcesContent":["import './Chat.css';\nimport LeftBar from './ChatScreen/LeftBar.js';\nimport ContactsBar from './ChatScreen/ContactsBar.js';\nimport ChatBox from './ChatScreen/ChatBox.js';\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Chat({ users, curUser, chats, setChats }) {\n\n  const [curChat, setCurChat] = useState(null);\n  const [selectedContact, setselectedContact] = useState(null);\n  const navigate = useNavigate();\n\n  const handleContactSelect = (chat) => {\n    findChat(chats, chat.id)\n    setselectedContact(contact);\n  };\n\n  const handleAddChat = (newChat) => {\n    setChats((prevChats) => [...prevChats, newChat]);\n  };\n\n  const updateChatMessages = (chatId, updatedMessages) => {\n    setChats((prevChats) =>\n    prevChats.map((chat) => {\n        if (chat.id === chatId) {\n          return {\n            ...chat,\n            messages: updatedMessages,\n          };\n        }\n        return chat;\n      })\n    );\n  };\n\n\n  function findChat(chats, otherUser) {\n    for (const chat of chats) {\n      let user = chat.users[0];\n  \n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n      user = chat.users[1];\n  \n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n    }\n  }\n\n  function handleLogOut(event) {\n    event.preventDefault();\n    navigate('/login');\n  }\n\n  return (\n    <>\n      <div id=\"background\"></div>\n      <LeftBar user={curUser} handleLogOut={handleLogOut}/>\n      <ContactsBar users={users} user={curUser} chats={chats} \n                   onChatSelect={handleContactSelect} onAddChat={handleAddChat} />\n      <ChatBox chat={curChat} selectedContact={selectedContact} setChat={setCurChat} \n               updateChatMessages={updateChatMessages}/>\n    </>\n  );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}