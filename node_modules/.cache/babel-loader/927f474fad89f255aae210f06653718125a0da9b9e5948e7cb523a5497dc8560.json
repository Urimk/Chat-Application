{"ast":null,"code":"var _jsxFileName = \"/home/uri/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/Ex2/Chat-Application/src/ChatScreen/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProfilePic from \"./ProfilePic\";\nimport ChatButtons from \"./ChatButtons.js\";\nimport Message from \"./Message.js\";\nimport SendMessage from \"./SendMessage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatBox(_ref) {\n  _s();\n  let {\n    chat,\n    selectedContact,\n    setChat,\n    updateChatMessages\n  } = _ref;\n  console.log(chat);\n  const [chatMessages, setChatMessages] = useState({});\n  const messagesContainerRef = useRef(null);\n  const messages = chat ? chat.messages || [] : [];\n  useEffect(() => {\n    if (chat) {\n      setChatMessages(prevMessages => ({\n        ...prevMessages,\n        [chat.id]: {\n          messages: chat.messages || []\n        }\n      }));\n    }\n  }, [chat]);\n  useEffect(() => {\n    const container = messagesContainerRef.current;\n    if (container && chat) {\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [chat]);\n  const formatDateTime = dateTime => {\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      hour12: false\n    };\n    return dateTime.toLocaleString(\"en-US\", options);\n  };\n  const handleSendMessage = messageText => {\n    if (chat) {\n      const newMessage = {\n        text: messageText,\n        time: formatDateTime(new Date())\n      };\n      const updatedMessages = [...(chat.messages || []), newMessage];\n      const updatedChat = {\n        ...chat,\n        messages: updatedMessages\n      };\n      setChatMessages(prevMessages => ({\n        ...prevMessages,\n        [chat.id]: {\n          messages: updatedMessages\n        }\n      }));\n      updateChatMessages(chat.id, updatedMessages);\n      setChat(updatedChat);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat_window\",\n    children: [selectedContact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        pic: selectedContact.ProfilePic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: selectedContact.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ChatButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messages\",\n      ref: messagesContainerRef,\n      children: messages.slice().reverse().map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          text: message.text,\n          time: message.time,\n          incoming: 0\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendMessage, {\n      onSendMessage: handleSendMessage,\n      selectedContact: selectedContact ? selectedContact.username : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"WUOmNIQxQ2RJUU0njkkGHUp/Txk=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProfilePic","ChatButtons","Message","SendMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_ref","_s","chat","selectedContact","setChat","updateChatMessages","console","log","chatMessages","setChatMessages","messagesContainerRef","messages","prevMessages","id","container","current","scrollTop","scrollHeight","formatDateTime","dateTime","options","year","month","day","hour","minute","second","hour12","toLocaleString","handleSendMessage","messageText","newMessage","text","time","Date","updatedMessages","updatedChat","children","pic","fileName","_jsxFileName","lineNumber","columnNumber","className","displayName","ref","slice","reverse","map","message","index","incoming","onSendMessage","username","_c","$RefreshReg$"],"sources":["/home/uri/שולחן העבודה/Ex2/Chat-Application/src/ChatScreen/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ProfilePic from \"./ProfilePic\";\nimport ChatButtons from \"./ChatButtons.js\";\nimport Message from \"./Message.js\";\nimport SendMessage from \"./SendMessage.js\";\n\nfunction ChatBox({chat, selectedContact, setChat, updateChatMessages }) {\n  console.log(chat);\n  const [chatMessages, setChatMessages] = useState({});\n  const messagesContainerRef = useRef(null);\n  const messages = chat ? chat.messages || [] : [];\n\n  useEffect(() => {\n    if (chat) {\n      setChatMessages((prevMessages) => ({\n        ...prevMessages,\n        [chat.id]: {\n          messages: chat.messages || [],\n        },\n      }));\n    }\n  }, [chat]);\n  \n\n\n  useEffect(() => {\n    const container = messagesContainerRef.current;\n    if (container && chat) {\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [chat]);\n\n  const formatDateTime = (dateTime) => {\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",   \n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      hour12: false,\n    };\n    return dateTime.toLocaleString(\"en-US\", options);\n  };\n\n  const handleSendMessage = (messageText) => {\n    if (chat) {\n      const newMessage = {\n        text: messageText,\n        time: formatDateTime(new Date()),\n      };\n  \n      const updatedMessages = [\n        ...(chat.messages || []),\n        newMessage,\n      ];\n  \n      const updatedChat = {\n        ...chat,\n        messages: updatedMessages,\n      };\n  \n      setChatMessages((prevMessages) => ({\n        ...prevMessages,\n        [chat.id]: {\n          messages: updatedMessages,\n        },\n      }));\n      updateChatMessages(chat.id, updatedMessages);\n      setChat(updatedChat);\n    }\n  };\n  return (\n    <div id=\"chat_window\">\n      {selectedContact && (\n        <>\n          <ProfilePic pic={selectedContact.ProfilePic}/>\n          <span className=\"username\">{selectedContact.displayName}</span>\n        </>\n      )}\n      <ChatButtons />\n      <div id=\"messages\" ref={messagesContainerRef}>\n      {messages.slice().reverse().map((message, index) => {\n        return (\n            <Message\n            key={index}\n            text={message.text}\n            time={message.time}\n            incoming={0}\n            />\n        );\n        })}\n      </div>\n      <SendMessage\n        onSendMessage={handleSendMessage}\n        selectedContact={selectedContact ? selectedContact.username : null}\n      />\n    </div>\n  );\n}\n\nexport default ChatBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}