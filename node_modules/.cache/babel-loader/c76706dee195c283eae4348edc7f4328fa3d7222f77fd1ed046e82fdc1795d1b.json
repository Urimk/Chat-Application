{"ast":null,"code":"var _jsxFileName = \"/home/uri/\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4/Ex2/Chat-Application/src/Chat.js\",\n  _s = $RefreshSig$();\nimport './Chat.css';\nimport LeftBar from './ChatScreen/LeftBar.js';\nimport ContactsBar from './ChatScreen/ContactsBar.js';\nimport ChatBox from './ChatScreen/ChatBox.js';\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  _s();\n  let {\n    users,\n    curUser\n  } = _ref;\n  const [curChat, setCurChat] = useState(null);\n  const [chats, setChats] = useState(curUser.chat || []);\n  const [selectedContact, setselectedContact] = useState(null);\n  const navigate = useNavigate();\n  const handleContactSelect = contact => {\n    findChat(chats, contact);\n    setselectedContact(contact);\n  };\n  const handleAddChat = newChat => {\n    setChats(prevChats => [...prevChats, newChat]);\n  };\n  const updateChatMessages = (chatId, updatedMessages) => {\n    setChats(prevChats => prevChats.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: updatedMessages\n        };\n      }\n      return chat;\n    }));\n  };\n  function findChat(chats, otherUser) {\n    for (const chat of chats) {\n      let user = chat.users[0];\n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n      user = chat.users[1];\n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n    }\n  }\n  function handleLogOut(event) {\n    event.preventDefault();\n    navigate('/login');\n  }\n  console.log(handleLogOut, \"2\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LeftBar, {\n      usecreated: curUser,\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsBar, {\n      users: users,\n      user: curUser,\n      chats: chats,\n      onContactSelect: handleContactSelect,\n      onAddChat: handleAddChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chat: curChat,\n      selectedContact: selectedContact,\n      setChat: setCurChat,\n      updateChatMessages: updateChatMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"9KHSewzjWdWYuGQf2UHAxNfxcMU=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["LeftBar","ContactsBar","ChatBox","React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","users","curUser","curChat","setCurChat","chats","setChats","chat","selectedContact","setselectedContact","navigate","handleContactSelect","contact","findChat","handleAddChat","newChat","prevChats","updateChatMessages","chatId","updatedMessages","map","id","messages","otherUser","user","username","handleLogOut","event","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","usecreated","onContactSelect","onAddChat","setChat","_c","$RefreshReg$"],"sources":["/home/uri/שולחן העבודה/Ex2/Chat-Application/src/Chat.js"],"sourcesContent":["import './Chat.css';\nimport LeftBar from './ChatScreen/LeftBar.js';\nimport ContactsBar from './ChatScreen/ContactsBar.js';\nimport ChatBox from './ChatScreen/ChatBox.js';\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Chat({ users, curUser }) {\n\n  const [curChat, setCurChat] = useState(null);\n  const [chats, setChats] = useState(curUser.chat || []);\n  const [selectedContact, setselectedContact] = useState(null);\n  const navigate = useNavigate();\n\n  const handleContactSelect = (contact) => {\n    findChat(chats, contact)\n    setselectedContact(contact);\n  };\n\n  const handleAddChat = (newChat) => {\n    setChats((prevChats) => [...prevChats, newChat]);\n  };\n\n  const updateChatMessages = (chatId, updatedMessages) => {\n    setChats((prevChats) =>\n    prevChats.map((chat) => {\n        if (chat.id === chatId) {\n          return {\n            ...chat,\n            messages: updatedMessages,\n          };\n        }\n        return chat;\n      })\n    );\n  };\n\n  function findChat(chats, otherUser) {\n    for (const chat of chats) {\n      let user = chat.users[0];\n  \n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n      user = chat.users[1];\n  \n      if (user.username === otherUser) {\n        setCurChat(chat);\n        return;\n      }\n    }\n  }\n\n  function handleLogOut(event) {\n    event.preventDefault();\n    navigate('/login');\n  }\n\n  console.log(handleLogOut, \"2\");\n  return (\n    <>\n      <div id=\"background\"></div>\n      <LeftBar usecreated={curUser} handleLogOut={handleLogOut}/>\n      <ContactsBar users={users} user={curUser} chats={chats} \n                   onContactSelect={handleContactSelect} onAddChat={handleAddChat} />\n      <ChatBox chat={curChat} selectedContact={selectedContact} setChat={setCurChat} \n               updateChatMessages={updateChatMessages}/>\n    </>\n  );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}